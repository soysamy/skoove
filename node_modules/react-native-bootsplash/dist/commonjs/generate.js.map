{"version":3,"names":["logoFileName","xcassetName","splashScreenIconSizeNoBackground","androidColorName","androidColorRegex","ContentsJson","getStoryboard","height","width","backgroundColor","hex","r","parseInt","toPrecision","g","b","log","text","dim","console","pc","isValidHexadecimal","value","test","toFullHexadecimal","prefixed","up","toUpperCase","length","generate","android","ios","workingPath","logoPath","logoWidth","flavor","assetsPath","Error","image","Jimp","read","backgroundColorHex","getHeight","size","Math","ceil","bitmap","logWrite","emoji","filePath","dimensions","path","relative","fs","existsSync","underline","Promise","all","ratio","suffix","map","fileName","resolve","clone","resize","quality","writeAsync","then","appPath","appName","sourceDir","resPath","valuesPath","ensureDirSync","colorsXmlPath","colorsXmlEntry","colorsXml","readFileSync","match","writeFileSync","replace","directory","canvasSize","canvas","logo","x","y","blit","projectPath","imagesPath","storyboardPath","imageSetPath","blue","bold"],"sources":["generate.ts"],"sourcesContent":["import fs from \"fs-extra\";\nimport Jimp from \"jimp\";\nimport path from \"path\";\nimport pc from \"picocolors\";\n\nconst logoFileName = \"bootsplash_logo\";\nconst xcassetName = \"BootSplashLogo\";\n// https://github.com/androidx/androidx/blob/androidx-main/core/core-splashscreen/src/main/res/values/dimens.xml#L22\nconst splashScreenIconSizeNoBackground = 288;\nconst androidColorName = \"bootsplash_background\";\nconst androidColorRegex = /<color name=\"bootsplash_background\">#\\w+<\\/color>/g;\n\nconst ContentsJson = `{\n  \"images\": [\n    {\n      \"idiom\": \"universal\",\n      \"filename\": \"${logoFileName}.png\",\n      \"scale\": \"1x\"\n    },\n    {\n      \"idiom\": \"universal\",\n      \"filename\": \"${logoFileName}@2x.png\",\n      \"scale\": \"2x\"\n    },\n    {\n      \"idiom\": \"universal\",\n      \"filename\": \"${logoFileName}@3x.png\",\n      \"scale\": \"3x\"\n    }\n  ],\n  \"info\": {\n    \"version\": 1,\n    \"author\": \"xcode\"\n  }\n}\n`;\n\nconst getStoryboard = ({\n  height,\n  width,\n  backgroundColor: hex,\n}: {\n  height: number;\n  width: number;\n  backgroundColor: string;\n}) => {\n  const r = (parseInt(hex[1] + hex[2], 16) / 255).toPrecision(15);\n  const g = (parseInt(hex[3] + hex[4], 16) / 255).toPrecision(15);\n  const b = (parseInt(hex[5] + hex[6], 16) / 255).toPrecision(15);\n\n  return `<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<document type=\"com.apple.InterfaceBuilder3.CocoaTouch.Storyboard.XIB\" version=\"3.0\" toolsVersion=\"17147\" targetRuntime=\"iOS.CocoaTouch\" propertyAccessControl=\"none\" useAutolayout=\"YES\" launchScreen=\"YES\" useTraitCollections=\"YES\" useSafeAreas=\"YES\" colorMatched=\"YES\" initialViewController=\"01J-lp-oVM\">\n    <device id=\"retina4_7\" orientation=\"portrait\" appearance=\"light\"/>\n    <dependencies>\n        <deployment identifier=\"iOS\"/>\n        <plugIn identifier=\"com.apple.InterfaceBuilder.IBCocoaTouchPlugin\" version=\"17120\"/>\n        <capability name=\"Safe area layout guides\" minToolsVersion=\"9.0\"/>\n        <capability name=\"documents saved in the Xcode 8 format\" minToolsVersion=\"8.0\"/>\n    </dependencies>\n    <scenes>\n        <!--View Controller-->\n        <scene sceneID=\"EHf-IW-A2E\">\n            <objects>\n                <viewController id=\"01J-lp-oVM\" sceneMemberID=\"viewController\">\n                    <view key=\"view\" autoresizesSubviews=\"NO\" userInteractionEnabled=\"NO\" contentMode=\"scaleToFill\" id=\"Ze5-6b-2t3\">\n                        <rect key=\"frame\" x=\"0.0\" y=\"0.0\" width=\"375\" height=\"667\"/>\n                        <autoresizingMask key=\"autoresizingMask\"/>\n                        <subviews>\n                            <imageView autoresizesSubviews=\"NO\" clipsSubviews=\"YES\" userInteractionEnabled=\"NO\" contentMode=\"scaleAspectFit\" image=\"BootSplashLogo\" translatesAutoresizingMaskIntoConstraints=\"NO\" id=\"3lX-Ut-9ad\">\n                                <rect key=\"frame\" x=\"${(375 - width) / 2}\" y=\"${\n    (667 - height) / 2\n  }\" width=\"${width}\" height=\"${height}\"/>\n                                <accessibility key=\"accessibilityConfiguration\">\n                                    <accessibilityTraits key=\"traits\" image=\"YES\" notEnabled=\"YES\"/>\n                                </accessibility>\n                            </imageView>\n                        </subviews>\n                        <viewLayoutGuide key=\"safeArea\" id=\"Bcu-3y-fUS\"/>\n                        <color key=\"backgroundColor\" red=\"${r}\" green=\"${g}\" blue=\"${b}\" alpha=\"1\" colorSpace=\"custom\" customColorSpace=\"sRGB\"/>\n                        <accessibility key=\"accessibilityConfiguration\">\n                            <accessibilityTraits key=\"traits\" notEnabled=\"YES\"/>\n                        </accessibility>\n                        <constraints>\n                            <constraint firstItem=\"3lX-Ut-9ad\" firstAttribute=\"centerX\" secondItem=\"Ze5-6b-2t3\" secondAttribute=\"centerX\" id=\"Fh9-Fy-1nT\"/>\n                            <constraint firstItem=\"3lX-Ut-9ad\" firstAttribute=\"centerY\" secondItem=\"Ze5-6b-2t3\" secondAttribute=\"centerY\" id=\"nvB-Ic-PnI\"/>\n                        </constraints>\n                    </view>\n                </viewController>\n                <placeholder placeholderIdentifier=\"IBFirstResponder\" id=\"iYj-Kq-Ea1\" userLabel=\"First Responder\" sceneMemberID=\"firstResponder\"/>\n            </objects>\n            <point key=\"canvasLocation\" x=\"0.0\" y=\"0.0\"/>\n        </scene>\n    </scenes>\n    <resources>\n        <image name=\"${xcassetName}\" width=\"${width}\" height=\"${height}\"/>\n    </resources>\n</document>\n`;\n};\n\nconst log = (text: string, dim = false) => {\n  console.log(dim ? pc.dim(text) : text);\n};\n\nconst isValidHexadecimal = (value: string) =>\n  /^#?([0-9A-F]{3}){1,2}$/i.test(value);\n\nconst toFullHexadecimal = (hex: string) => {\n  const prefixed = hex[0] === \"#\" ? hex : `#${hex}`;\n  const up = prefixed.toUpperCase();\n\n  return up.length === 4\n    ? \"#\" + up[1] + up[1] + up[2] + up[2] + up[3] + up[3]\n    : up;\n};\n\nexport const generate = async ({\n  android,\n  ios,\n\n  workingPath,\n  logoPath,\n  backgroundColor,\n  logoWidth,\n  flavor,\n  assetsPath,\n}: {\n  android: {\n    sourceDir: string;\n    appName: string;\n  } | null;\n  ios: {\n    projectPath: string;\n  } | null;\n\n  workingPath: string;\n  logoPath: string;\n  assetsPath?: string;\n\n  backgroundColor: string;\n  flavor: string;\n  logoWidth: number;\n}) => {\n  if (!isValidHexadecimal(backgroundColor)) {\n    throw new Error(\n      \"--background-color value is not a valid hexadecimal color.\",\n    );\n  }\n\n  const image = await Jimp.read(logoPath);\n  const backgroundColorHex = toFullHexadecimal(backgroundColor);\n\n  const getHeight = (size: number) =>\n    Math.ceil(size * (image.bitmap.height / image.bitmap.width));\n\n  const logWrite = (\n    emoji: string,\n    filePath: string,\n    dimensions?: { width: number; height: number },\n  ) =>\n    log(\n      `${emoji}  ${path.relative(workingPath, filePath)}` +\n        (dimensions != null\n          ? ` (${dimensions.width}x${dimensions.height})`\n          : \"\"),\n    );\n\n  if (assetsPath && fs.existsSync(assetsPath)) {\n    log(`\\n    ${pc.underline(\"Assets\")}`);\n\n    await Promise.all(\n      [\n        { ratio: 1, suffix: \"\" },\n        { ratio: 1.5, suffix: \"@1,5x\" },\n        { ratio: 2, suffix: \"@2x\" },\n        { ratio: 3, suffix: \"@3x\" },\n        { ratio: 4, suffix: \"@4x\" },\n      ].map(({ ratio, suffix }) => {\n        const fileName = `${logoFileName}${suffix}.png`;\n        const filePath = path.resolve(assetsPath, fileName);\n        const width = logoWidth * ratio;\n        const height = getHeight(width);\n\n        return image\n          .clone()\n          .resize(width, height)\n          .quality(100)\n          .writeAsync(filePath)\n          .then(() => {\n            logWrite(\"✨\", filePath, { width, height });\n          });\n      }),\n    );\n  }\n\n  if (android) {\n    log(`\\n    ${pc.underline(\"Android\")}`);\n\n    const appPath = android.appName\n      ? path.resolve(android.sourceDir, android.appName)\n      : path.resolve(android.sourceDir); // @react-native-community/cli 2.x & 3.x support\n\n    const resPath = path.resolve(appPath, \"src\", flavor, \"res\");\n    const valuesPath = path.resolve(resPath, \"values\");\n\n    fs.ensureDirSync(valuesPath);\n\n    const colorsXmlPath = path.resolve(valuesPath, \"colors.xml\");\n    const colorsXmlEntry = `<color name=\"${androidColorName}\">${backgroundColorHex}</color>`;\n\n    if (fs.existsSync(colorsXmlPath)) {\n      const colorsXml = fs.readFileSync(colorsXmlPath, \"utf-8\");\n\n      if (colorsXml.match(androidColorRegex)) {\n        fs.writeFileSync(\n          colorsXmlPath,\n          colorsXml.replace(androidColorRegex, colorsXmlEntry),\n          \"utf-8\",\n        );\n      } else {\n        fs.writeFileSync(\n          colorsXmlPath,\n          colorsXml.replace(\n            /<\\/resources>/g,\n            `    ${colorsXmlEntry}\\n</resources>`,\n          ),\n          \"utf-8\",\n        );\n      }\n\n      logWrite(\"✏️ \", colorsXmlPath);\n    } else {\n      fs.writeFileSync(\n        colorsXmlPath,\n        `<resources>\\n    ${colorsXmlEntry}\\n</resources>\\n`,\n        \"utf-8\",\n      );\n\n      logWrite(\"✨\", colorsXmlPath);\n    }\n\n    await Promise.all(\n      [\n        { ratio: 1, directory: \"mipmap-mdpi\" },\n        { ratio: 1.5, directory: \"mipmap-hdpi\" },\n        { ratio: 2, directory: \"mipmap-xhdpi\" },\n        { ratio: 3, directory: \"mipmap-xxhdpi\" },\n        { ratio: 4, directory: \"mipmap-xxxhdpi\" },\n      ].map(({ ratio, directory }) => {\n        const fileName = `${logoFileName}.png`;\n        const filePath = path.resolve(resPath, directory, fileName);\n        const width = logoWidth * ratio;\n        const height = getHeight(width);\n\n        const canvasSize = splashScreenIconSizeNoBackground * ratio;\n\n        // https://github.com/oliver-moran/jimp/tree/master/packages/jimp#creating-new-images\n        const canvas = new Jimp(canvasSize, canvasSize, 0xffffff00);\n        const logo = image.clone().resize(width, height);\n\n        const x = (canvasSize - width) / 2;\n        const y = (canvasSize - height) / 2;\n\n        return canvas\n          .blit(logo, x, y)\n          .quality(100)\n          .writeAsync(filePath)\n          .then(() => {\n            logWrite(\"✨\", filePath, { width: canvasSize, height: canvasSize });\n          });\n      }),\n    );\n  }\n\n  if (ios) {\n    log(`\\n    ${pc.underline(\"iOS\")}`);\n\n    const { projectPath } = ios;\n    const imagesPath = path.resolve(projectPath, \"Images.xcassets\");\n\n    if (fs.existsSync(projectPath)) {\n      const storyboardPath = path.resolve(projectPath, \"BootSplash.storyboard\");\n\n      fs.writeFileSync(\n        storyboardPath,\n        getStoryboard({\n          height: getHeight(logoWidth),\n          width: logoWidth,\n          backgroundColor: backgroundColorHex,\n        }),\n        \"utf-8\",\n      );\n\n      logWrite(\"✨\", storyboardPath);\n    } else {\n      log(\n        `No \"${projectPath}\" directory found. Skipping iOS storyboard generation…`,\n      );\n    }\n\n    if (fs.existsSync(imagesPath)) {\n      const imageSetPath = path.resolve(imagesPath, xcassetName + \".imageset\");\n      fs.ensureDirSync(imageSetPath);\n\n      fs.writeFileSync(\n        path.resolve(imageSetPath, \"Contents.json\"),\n        ContentsJson,\n        \"utf-8\",\n      );\n\n      await Promise.all(\n        [\n          { ratio: 1, suffix: \"\" },\n          { ratio: 2, suffix: \"@2x\" },\n          { ratio: 3, suffix: \"@3x\" },\n        ].map(({ ratio, suffix }) => {\n          const fileName = `${logoFileName}${suffix}.png`;\n          const filePath = path.resolve(imageSetPath, fileName);\n          const width = logoWidth * ratio;\n          const height = getHeight(width);\n\n          return image\n            .clone()\n            .resize(width, height)\n            .quality(100)\n            .writeAsync(filePath)\n            .then(() => {\n              logWrite(\"✨\", filePath, { width, height });\n            });\n        }),\n      );\n    } else {\n      log(\n        `No \"${imagesPath}\" directory found. Skipping iOS images generation…`,\n      );\n    }\n  }\n\n  log(`\n ${pc.blue(\"┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓\")}\n ${pc.blue(\"┃\")}  💖  ${pc.bold(\n    \"Love this library? Consider sponsoring!\",\n  )}  ${pc.blue(\"┃\")}\n ${pc.blue(\"┃\")}  One-time amounts are available.              ${pc.blue(\"┃\")}\n ${pc.blue(\"┃\")}  ${pc.underline(\n    \"https://github.com/sponsors/zoontek\",\n  )}          ${pc.blue(\"┃\")}\n ${pc.blue(\"┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛\")}\n`);\n\n  log(`✅  Done! Thanks for using ${pc.underline(\"react-native-bootsplash\")}.`);\n};\n"],"mappings":"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"}